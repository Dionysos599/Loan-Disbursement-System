name: Build and Release Windows App

on:
  push:
    branches:
      - feature/light_weight_system

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: lightweight-system/package-lock.json
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pywebview
          pip install pyinstaller
          
      - name: Install npm dependencies
        working-directory: lightweight-system
        run: npm ci
        
      - name: Build React application
        working-directory: lightweight-system
        run: npm run build
        
      - name: Verify build output
        working-directory: lightweight-system
        run: |
          if (!(Test-Path "build/index.html")) {
            Write-Error "React build failed: index.html not found"
            exit 1
          }
          Write-Host "React build successful"
          
      - name: Build executable with PyInstaller
        working-directory: lightweight-system
        run: pyinstaller build.spec
        
      - name: Verify executable
        working-directory: lightweight-system
        run: |
          $exeFiles = Get-ChildItem -Path "dist" -Filter "*.exe"
          if ($exeFiles.Count -eq 0) {
            Write-Error "PyInstaller build failed: No exe files found"
            exit 1
          }
          Write-Host "Found executable: $($exeFiles[0].Name)"
          Write-Host "File size: $([math]::Round($exeFiles[0].Length / 1MB, 2)) MB"
          
      - name: Generate version tag
        id: version
        run: |
          $date = Get-Date -Format "yyyy.MM.dd"
          $time = Get-Date -Format "HHmm"
          $version = "v$date-$time"
          echo "version=$version" >> $env:GITHUB_OUTPUT
          echo "Generated version: $version"

      - name: Upload Windows App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: lightweight-system/dist/*.exe
          retention-days: 30